PART1: CONFIGMAPS:
-----------------

$ vim sample.conf
This is the sample configuration file
$ kubectl create configmap mymap --from-file=sample.conf

# kubectl get configmap
NAME               DATA   AGE
kube-root-ca.crt   1      40m
mymap              1      113s


configmap: As volume in pod
====================================================================
apiVersion: v1
kind: Pod
metadata:
  name: myvolconfig
spec:
  containers:
  - name: c1
    image: centos
    command: ["/bin/bash", "-c", "while true; do echo Technical-Guftgu; sleep 5 ; done"]
    volumeMounts:
      - name: testconfigmap
        mountPath: "/tmp/config"   # the config files will be mounted as ReadOnly by default here
  volumes:
  - name: testconfigmap
    configMap:
       name: mymap   # this should match the config map name created in the first step(part 1)
       items:
       - key: sample.conf
         path: sample.conf
-------

#kubectl get pods
#kubectl exec -it myvolconfig bash

cat /tmp/config/sample.conf
This is the sample configuration file



configmap: As Environment variable
==============================================================================

apiVersion: v1
kind: Pod
metadata:
  name: myenvconfig
spec:
  containers:
  - name: c1
    image: centos
    command: ["/bin/bash", "-c", "while true; do echo Technical-Guftgu; sleep 5 ; done"]
    env:
    - name: MYENV         # env name in which value of the key is stored
      valueFrom:
        configMapKeyRef:
          name: mymap      # name of the config created
          key: sample.conf            

------
Apply above yml file
#kubectl exec -it  myenvconfig -- bash
#env
MYENV=This is the sample configuration file

The content of sample.conf gets saved into envronment variale named "MYENV" inside the pod 
=========================================================



PART1: SECRETS:
--------------
$ echo "root" > username.txt ; echo "password" > password.txt
$kubectl create secret generic mysecret --from-file="username.txt" --from-file="password.txt"

# kubectl get secret
NAME       TYPE     DATA   AGE
mysecret   Opaque   2      19s

# kubectl describe secret mysecret
Name:         mysecret
Namespace:    default
Labels:       <none>
Annotations:  <none>

Type:  Opaque

Data
====
password.txt:  9 bytes
username.txt:  5 bytes

-----------------
apiVersion: v1
kind: Pod
metadata:
  name: myvolsecret
spec:
  containers:
  - name: c1
    image: centos
    command: ["/bin/bash", "-c", "while true; do echo Technical-guftgu; sleep 5 ; done"]
    volumeMounts:
      - name: testsecret
        mountPath: "/tmp/mysecrets"   # the secret files will be mounted as ReadOnly by default here
  volumes:
  - name: testsecret
    secret:
       secretName: mysecret  

Apply above yml file
# kubectl exec -it myvolsecret -- bash

# ls /tmp/mysecrets/
password.txt  username.txt

# cat /tmp/mysecrets/username.txt
root




 

























